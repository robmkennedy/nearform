import { createSlice, type PayloadAction } from '@reduxjs/toolkit';
import type { Pokemon } from '@features/challenge/types/pokemonTypes';

type DeckState = {
    pokemonDeckList: Pokemon[];
};

const initialDeckState: DeckState = {
    pokemonDeckList: []
};

/**
 */
export const pokemonDeckSlice = createSlice({
    name: 'pokemonDeck',
    initialState: initialDeckState,
    reducers: {
        pokemonSelected: (state, { payload }: PayloadAction<Pokemon>) => {
            const exists = state.pokemonDeckList.find((pokemon) => pokemon.name === payload.name);
            if (!exists) {
                state.pokemonDeckList.push(payload);
            }
        },
        pokemonDeselected: (state, { payload }: PayloadAction<Pokemon>) => {
            state.pokemonDeckList = state.pokemonDeckList.filter((pokemon) => pokemon.name !== payload.name);
        }
    }
});

// Redux actions automatically generated by redux toolkit
export const { pokemonSelected, pokemonDeselected } = pokemonDeckSlice.actions;
